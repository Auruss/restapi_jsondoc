(function(){function api(it) {
var out=''; var call_id = 0;  for(var call in it) {  if(call == "models") continue; out+='<div class="panel" data-role="panel"> <div class="panel-header bg-darkRed fg-white"> '; for(var type in it[call]) { out+=' <button class="small primary">'+(type)+'</button> '; } out+=' '+(call)+' </div> <div class="panel-content"> <div class="tab-control" data-role="tab-control"> <ul class="tabs"> '; var i = 0; out+=' '; for(var type in it[call]) { out+=' <li '; if(i==0) {out+=' class="active" '; } out+='><a href="#_'+(call_id)+'_'+(i)+'">'+(type)+'</a></li> '; i++; } out+=' </ul> <div class="frames"> '; var i = 0; out+=' '; for(var type in it[call]) { out+=' <div class="frame" id="_'+(call_id)+'_'+(i)+'"> <h3>'+(it[call][type].short)+'</h2> <p>'+(it[call][type].description)+'</p> <br /> <h3>Request Parameters</h3> <table class="table hovered"> <thead> <tr> <th class="text-left">Name</th> <th class="text-left">Type</th> </tr> </thead> <tbody> '; if ("request" in it[call][type]) { out+=' '; if ("models" in it[call][type].request) { out+=' '; for(var model in it[call][type].request.models) { out+=' '; for(var prop in it["models"][model]) { out+=' '; if ("include" in it[call][type].request.models[model]) { out+=' '; if (it[call][type].request.models[model].include.indexOf(prop) < 0) continue;out+=' '; } out+=' '; if ("without" in it[call][type].request.models[model]) { out+=' '; var cont = false; out+=' '; for (var ignore in it[call][type].request.models[model].without) { out+=' '; if(it[call][type].request.models[model].without[ignore] == prop) {cont=true;break;} out+=' '; } out+=' '; if(cont) continue; out+=' '; } out+=' <tr> <td>'+(model)+'.'+(prop)+'</td> <td>'+(it["models"][model][prop].type)+'</td> </tr> '; } out+=' '; } out+=' '; } out+=' '; } out+=' </tbody> </table> <br /> <h3>Response</h3> <table class="table hovered"> <thead> <tr> <th class="text-left">Response Code</th> <th class="text-left">Response Data</th> </tr> </thead> <tbody> '; for(var code in it[call][type].response) { out+=' <tr> <td>'+(code)+'</td> <td> '+(it[call][type].response[code].description)+' <br /> <br /> <table class="table"> <thead> <tr> <th class="text-left">Name</th> <th class="text-left">Type</th> </tr> </thead> <tbody> '; if ("models" in it[call][type].response[code]) { out+=' '; for(var model in it[call][type].response[code].models) { out+=' '; if ("array" in it[call][type].response[code].models[model]) { out+=' <tr> <td>'+(model)+'</td> <td>array</td> </tr> '; } out+=' '; for(var prop in it["models"][model]) { out+=' '; if ("include" in it[call][type].response[code].models[model]) { out+=' '; if (it[call][type].response[code].models[model].include.indexOf(prop) < 0) continue;out+=' '; } out+=' '; if ("without" in it[call][type].response[code].models[model]) { out+=' '; var cont = false; out+=' '; for (var ignore in it[call][type].response[code].models[model].without) { out+=' '; if(it[call][type].response[code].models[model].without[ignore] == prop) {cont=true;break;} out+=' '; } out+=' '; if(cont) continue; out+=' '; } out+=' <tr> '; if ("array" in it[call][type].response[code].models[model]) {out+=' <td>&nbsp;&nbsp;&nbsp;&nbsp;'+(model)+'.'+(prop)+'</td> '; } else { out+=' <td>'+(model)+'.'+(prop)+'</td> '; } out+=' <td>'+(it["models"][model][prop].type)+'</td> </tr> '; } out+=' '; } out+=' '; } out+=' </tbody> </table> </td> </tr> '; } out+=' </tbody> </table> </div> '; i++; } out+=' </div> </div> </div></div><br />'; call_id++; } out+='<br /><h1>Models</h1><hr />'; for(model in it["models"]) { out+='<div class="panel" data-role="panel"> <div class="panel-header bg-darkRed fg-white"> '+(model)+' </div> <div class="panel-content"> <table class="table"> <thead> <tr> <th class="text-left">Name</th> <th class="text-left">Type</th> </tr> </thead> <tbody> '; for(var prop in it["models"][model]) { out+=' <tr> <td>'+(prop)+'</td> <td>'+(it["models"][model][prop].type)+'</td> </tr> '; } out+=' </tbody> </table> </div></div><br />'; } return out;
}var itself=api, _encodeHTML=(function (doNotSkipEncoded) {
		var encodeHTMLRules = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
			matchHTML = doNotSkipEncoded ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;
		return function(code) {
			return code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : "";
		};
	}());if(typeof module!=='undefined' && module.exports) module.exports=itself;else if(typeof define==='function')define(function(){return itself;});else {window.render=window.render||{};window.render['api']=itself;}}());